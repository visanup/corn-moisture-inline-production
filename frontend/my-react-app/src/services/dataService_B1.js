// services/dataService.js

// ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ Vite proxy ‡πÉ‡∏´‡πâ mapping /api ‚Üí /api/v1 ‡πÅ‡∏ó‡∏ô CORS
const API_PREFIX = '/api';

/** ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° headers ‡∏û‡∏£‡πâ‡∏≠‡∏° token */
function getAuthHeaders() {
  const refreshToken = localStorage.getItem('refreshToken');
  if (!refreshToken) throw new Error('No refreshToken found. ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ login ‡πÉ‡∏´‡∏°‡πà‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
  return {
    'Authorization': `Bearer ${refreshToken}`,
    'Content-Type': 'application/json'
  };
}

/** ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢ GET ‡∏ú‡πà‡∏≤‡∏ô proxy */
async function apiGet(endpoint) {
  const url = `${API_PREFIX}${endpoint}`;
  console.log(`üëâ GET ${url}`);
  const res = await fetch(url, {
    method: 'GET',
    headers: getAuthHeaders()
  });
  if (!res.ok) {
    const text = await res.text();
    throw new Error(`GET ${endpoint} failed: ${res.status} ‚Äì ${text}`);
  }
  return res.json();
}

/**
 * ‡∏î‡∏∂‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å Data Service ‡∏ï‡∏≤‡∏° queue:
 * GET /api/v1/data/results?queue={queue}
 */
function fetchResultsByQueue(queue) {
  return apiGet(`/data/results?queue=${encodeURIComponent(queue)}`);
}

/**
 * (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£) ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤ interface:
 * GET /api/v1/data/interface-results?ins_lot=‚Ä¶&material=‚Ä¶&batch=‚Ä¶&plant=‚Ä¶&sample_no=‚Ä¶
 */
function fetchInterfaceStats({ ins_lot, material, batch, plant, sample_no }) {
  const qs = new URLSearchParams({ ins_lot, material, batch, plant, sample_no }).toString();
  return apiGet(`/data/interface-results?${qs}`);
}

export {
  fetchResultsByQueue,
  fetchInterfaceStats
};
