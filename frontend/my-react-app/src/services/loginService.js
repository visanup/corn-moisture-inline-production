// loginService.js
export async function login(email, password) {
  // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ raw endpoint ‡∏à‡∏≤‡∏Å .env
  let endpoint = import.meta.env.VITE_REACT_APP_USER_ENDPOINT;
  console.log("üëà auth-endpoint:", endpoint);
  
  // ‡∏ï‡∏±‡∏î slash ‡∏ó‡πâ‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô // ‡πÄ‡∏Å‡∏¥‡∏ô)
  endpoint = endpoint.replace(/\/+$/, '');

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
  const url = `${endpoint}/api/v1/auth/login`;
  console.log("üëâ Login URL:", url);
  console.log("üëâ Payload:", { email, password });

  const response = await fetch(url, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ email, password })
  });

  console.log("üëà Response status:", response.status, response.url);

  if (!response.ok) {
    const errorText = await response.text();
    throw new Error(`Login failed: ${response.status} ‚Äì ${errorText}`);
  }

  const data = await response.json();

  // ‡πÄ‡∏Å‡πá‡∏ö token ‡∏•‡∏á localStorage
  if (data.accessToken) {
    localStorage.setItem('accessToken', data.accessToken);
  }
  if (data.refreshToken) {
    localStorage.setItem('refreshToken', data.refreshToken);
  }

  return data;
}
